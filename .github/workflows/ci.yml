name: Test helioviewer.org

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Workflow dispatch is used to trigger these tests from the helioviewer.org
  # repository. It passes the commit so that the tests can run against the code
  # submitted with the pull request. This lets us run the latest tests
  # against new pull requests. This may fail if the patch requires updates to
  # tests.
  workflow_dispatch:
    inputs:
      test_pr:
        description: "Test repository pull request number. If blank, use latest commit"
        required: false
      helioviewer_pr:
        description: "Helioviewer.org pull request number. If blank, use latest commit."
        required: false
      api_pr:
        description: "Helioviewer API pull request number. If blank, use latest commit."
        required: false

permissions:
  contents: read

jobs:
  typescript-check:
    # This only runs on the test code, it does not need to run when testing a
    # PR from helioviewer.org
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install node dependencies
        run: npm ci

      - name: Run typescript
        run: npx tsc -p tests/tsconfig.json --noEmit

  code-style:
    # This only runs on the test code, it does not need to run when testing a
    # PR from helioviewer.org
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install node dependencies
        run: npm ci

      - name: Prettier check (tests and certain files)
        run: npm run prettier-check

  playwright-e2e-tests:
    strategy:
      matrix:
        shardIndex: [1, 2, 3, 4, 5]
        shardTotal: [5]
      fail-fast: false

    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout test code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.test_pr != '' && format('refs/pull/{0}/head', github.event.inputs.test_pr) || github.ref }}

      - name: Checkout Helioviewer.org code being tested
        uses: actions/checkout@v4
        with:
          repository: helioviewer-project/helioviewer.org
          submodules: true
          path: "helioviewer.org"
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.helioviewer_pr != '' && format('refs/pull/{0}/head', github.event.inputs.helioviewer_pr) || format('refs/pull/{0}/head', '660')  || 'main' }}

      - name: Checkout the Helioviewer API code being tested
        uses: actions/checkout@v4
        with:
          repository: 'helioviewer-project/api'
          path: 'api'
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.api_pr != '' && format('refs/pull/{0}/head', github.event.inputs.api_pr) || 'main' }}

      # This workflow is designed so that we can specify exactly which pull
      # requests we want to test against. This is here for reference of the
      # exact commit IDs and pull requests are being tested
      - name: Print current helioviewer.org commit
        run: |
          cd helioviewer.org
          echo  web commit: $(git rev-parse HEAD). PR: ${{ github.event.inputs.helioviewer_pr || 'N/A' }}
          cd ../api
          echo  api commit: $(git rev-parse HEAD). PR: ${{ github.event.inputs.api_pr || 'N/A' }}
          cd ..
          echo test commit: $(git rev-parse HEAD). PR: ${{ github.event.inputs.test_pr || 'N/A' }}

      - name: Checkout the Dockerfile for local Helioviewer
        uses: actions/checkout@v4
        with:
          repository: 'Helioviewer-Project/helioviewer.org-docker'
          path: 'compose'
          sparse-checkout: |
            compose.yaml
            .env.example
          sparse-checkout-cone-mode: false
      - name: Print current directory
        run: |
          echo $(pwd)
          echo $(ls)
      - name: Setup environment file
        run: mv compose/.env.example .env
      - name: Start local Helioviewer environment
        id: docker
        run: |
          mv compose/compose.yaml .
          docker compose up -d --wait
      - name: Show docker compose logs
        if: always()
        run: |
          docker compose logs
          cat compose.yaml
      - name: Fix cache directory permissions
        if: always()
        run: |
          docker compose exec web chown 33:33 cache
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Playwright Browsers
        run: |
          cd helioviewer.org
          npx playwright install --with-deps
      - name: Run Playwright tests
        run: |
          cd helioviewer.org
          npx playwright test --shard=${{matrix.shardIndex}}/${{matrix.shardTotal}}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{matrix.shardIndex}}
          path: helioviewer.org/playwright-report/
          retention-days: 7
